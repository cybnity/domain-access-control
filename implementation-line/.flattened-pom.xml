<?xml version="1.0" encoding="UTF-8"?>
<project xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd" xmlns="http://maven.apache.org/POM/4.0.0"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
  <modelVersion>4.0.0</modelVersion>
  <parent>
    <groupId>org.cybnity</groupId>
    <artifactId>applications</artifactId>
    <version>0.1.0</version>
    <relativePath>..</relativePath>
  </parent>
  <groupId>org.cybnity</groupId>
  <artifactId>applications-impl</artifactId>
  <version>0.1.0</version>
  <packaging>pom</packaging>
  <name>CYBNITY ACCESS CONTROL APPLICATION</name>
  <modules>
    <module>access-control</module>
  </modules>
  <properties>
    <docker.nodejs.image.name>node:16.17.0-bullseye</docker.nodejs.image.name>
    <foundation.compatibility.version>feature-58-SNAPSHOT</foundation.compatibility.version>
    <docker.java.tee.image.name>cybnity/jre-tee</docker.java.tee.image.name>
    <revision>0.1.0</revision>
  </properties>
  <dependencyManagement>
    <dependencies>
      <dependency>
        <groupId>org.cybnity.framework</groupId>
        <artifactId>support</artifactId>
        <version>${foundation.compatibility.version}</version>
        <scope>compile</scope>
      </dependency>
    </dependencies>
  </dependencyManagement>
  <dependencies>
    <dependency>
      <groupId>org.cybnity.framework</groupId>
      <artifactId>support</artifactId>
    </dependency>
  </dependencies>
  <profiles>
    <profile>
      <id>localhost</id>
      <activation>
        <activeByDefault>true</activeByDefault>
      </activation>
      <properties>
        <docker.useColor>true</docker.useColor>
        <docker.images.healtcheck.port>8080</docker.images.healtcheck.port>
        <docker.verbose>true</docker.verbose>
        <docker.images.tag.suffix>-alpha</docker.images.tag.suffix>
        <docker.skip.push>true</docker.skip.push>
        <docker.skip.build>false</docker.skip.build>
        <docker.imagePullPolicy>IfNotPresent</docker.imagePullPolicy>
        <docker.skip.tag>false</docker.skip.tag>
      </properties>
    </profile>
    <profile>
      <id>dev-deploy-environment</id>
      <activation>
        <property>
          <name>environment</name>
          <value>dev-deploy</value>
        </property>
      </activation>
      <properties>
        <docker.useColor>true</docker.useColor>
        <docker.images.healtcheck.port>8080</docker.images.healtcheck.port>
        <docker.verbose>true</docker.verbose>
        <docker.images.tag.suffix>-alpha</docker.images.tag.suffix>
        <docker.skip.push>true</docker.skip.push>
        <docker.skip.build>false</docker.skip.build>
        <docker.imagePullPolicy>IfNotPresent</docker.imagePullPolicy>
        <docker.skip.tag>false</docker.skip.tag>
      </properties>
    </profile>
    <profile>
      <id>qa-environment</id>
      <activation>
        <property>
          <name>environment</name>
          <value>qa</value>
        </property>
      </activation>
      <properties>
        <docker.images.healtcheck.port>8080</docker.images.healtcheck.port>
      </properties>
    </profile>
    <profile>
      <id>commit-stage</id>
      <activation>
        <property>
          <name>stage</name>
          <value>commit</value>
        </property>
      </activation>
      <properties>
        <docker.useColor>true</docker.useColor>
        <docker.verbose>true</docker.verbose>
        <docker.images.tag.suffix>-alpha</docker.images.tag.suffix>
        <docker.skip.push>true</docker.skip.push>
        <docker.skip.build>false</docker.skip.build>
        <docker.imagePullPolicy>IfNotPresent</docker.imagePullPolicy>
        <docker.skip.tag>false</docker.skip.tag>
      </properties>
    </profile>
    <profile>
      <id>technical-quality-stage</id>
      <activation>
        <property>
          <name>stage</name>
          <value>technical-quality</value>
        </property>
      </activation>
      <build>
        <plugins>
          <plugin>
            <artifactId>maven-dependency-plugin</artifactId>
            <executions>
              <execution>
                <id>resolve-dependency</id>
                <phase>validate</phase>
                <goals>
                  <goal>resolve</goal>
                  <goal>resolve-plugins</goal>
                </goals>
                <configuration>
                  <silent>false</silent>
                </configuration>
              </execution>
              <execution>
                <id>analyze-dependencies</id>
                <phase>validate</phase>
                <goals>
                  <goal>analyze-dep-mgt</goal>
                  <goal>analyze-duplicate</goal>
                </goals>
              </execution>
              <execution>
                <id>report-tree</id>
                <phase>validate</phase>
                <goals>
                  <goal>tree</goal>
                </goals>
                <configuration>
                  <outputFile>mpp-official-version-pom-tree.txt</outputFile>
                  <outputType>text</outputType>
                  <appendOutput>false</appendOutput>
                </configuration>
              </execution>
            </executions>
          </plugin>
        </plugins>
      </build>
      <properties>
        <docker.useColor>true</docker.useColor>
        <docker.verbose>true</docker.verbose>
        <docker.images.tag.suffix>-alpha</docker.images.tag.suffix>
        <docker.skip.push>false</docker.skip.push>
        <docker.skip.build>false</docker.skip.build>
        <docker.imagePullPolicy>IfNotPresent</docker.imagePullPolicy>
        <docker.skip.tag>false</docker.skip.tag>
      </properties>
    </profile>
    <profile>
      <id>integration-quality-stage</id>
      <activation>
        <property>
          <name>stage</name>
          <value>integration-quality</value>
        </property>
      </activation>
      <properties>
        <docker.useColor>true</docker.useColor>
        <docker.verbose>false</docker.verbose>
        <docker.images.tag.suffix>-beta</docker.images.tag.suffix>
        <docker.skip.push>false</docker.skip.push>
        <docker.skip.build>false</docker.skip.build>
        <docker.imagePullPolicy>IfNotPresent</docker.imagePullPolicy>
        <docker.skip.tag>false</docker.skip.tag>
      </properties>
    </profile>
    <profile>
      <id>user-acceptance-test-stage</id>
      <activation>
        <property>
          <name>stage</name>
          <value>user-acceptance-test</value>
        </property>
      </activation>
    </profile>
  </profiles>
</project>
